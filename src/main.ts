import { ValidationPipe } from '@nestjs/common';
import { NestFactory } from '@nestjs/core';
import { DocumentBuilder, SwaggerModule } from '@nestjs/swagger';
import { AppModule } from './app.module';
import { PrismaService } from './prisma/prisma.service';

async function bootstrap() {
  const app = await NestFactory.create(AppModule);
  app.useGlobalPipes(
    new ValidationPipe({
      whitelist: true, // ignora campos que n√£o est√£o no DTO
      forbidNonWhitelisted: false, // n√£o lan√ßa erro por campos extras
      transform: true, // converte tipos automaticamente (string ‚Üí number, etc)
      transformOptions: {
        enableImplicitConversion: true, // aceita n√∫mero como string, boolean etc.
      },
    }),
  );

  // ‚úÖ Libera CORS para o frontend (localhost e produ√ß√£o)
  app.enableCors({
  origin: [
    'http://localhost:3000',
    'https://bookshelf-mobr.vercel.app',
  ],
  methods: 'GET,HEAD,PUT,PATCH,POST,DELETE,OPTIONS',
  credentials: true,
});


  // ‚úÖ Garante que o Prisma feche corretamente no shutdown
  const prismaService = app.get(PrismaService);
  await prismaService.enableShutdownHooks(app);

  // ‚úÖ Configura√ß√£o do Swagger
  const config = new DocumentBuilder()
    .setTitle('Bookshelf API')
    .setDescription(
      'API para gerenciamento de uma biblioteca pessoal de livros.',
    )
    .setVersion('1.0')
    .addTag('books', 'Opera√ß√µes relacionadas a livros')
    .addTag('genres', 'Opera√ß√µes relacionadas a g√™neros')
    .build();

  const document = SwaggerModule.createDocument(app, config);
  SwaggerModule.setup('api', app, document);

  // ‚úÖ Escuta na porta padr√£o (Render define PORT automaticamente)
  await app.listen(process.env.PORT || 3000);
  console.log(`üöÄ Aplica√ß√£o rodando em: ${await app.getUrl()}`);
}

bootstrap();
